/**
 * ThreadRaceFrame - Frame for application Thread Race, used to model a race
 *                   between runners using threads.
 * 
 * @author Jason Schroeder
 * @created 06/14/2017
 */

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.io.*;

public class ThreadRaceFrame extends javax.swing.JFrame
{
    /* Class attributes */
    private int numRacers;
    private ArrayList<ThreadRunner> racers = new ArrayList<>();    
    
    /* Constructor */
    
    public ThreadRaceFrame()
    {
        initComponents();
        
        //Call method centerFrame() to center window on screen
        this.centerFrame();
        
        //Populate restTimeComboBox
        for (int i = 100; i > 0; i -= 10)
        {
            restTimeComboBox.addItem(Integer.toString(i));
        }
        
        //Create two default racers
        racers.add(new ThreadRunner("Tortoise", 0, 10));
        racers.add(new ThreadRunner("Hare", 90, 100));

        //Populate racers ArrayList with placeholder ThreadRunner objects
        for (int i = 0; i < 7; i++)
        {
            ThreadRunner t = new ThreadRunner("", 50, 50);
            racers.add(t);
            racers.get(i + 2).setName("Racer" + Integer.toString(i + 3));
        }
        
        //Set parent attribute of ThreadRunner objects to this frame
        for (int i = 0; i < 9; i++)
            racers.get(i).setParent(this);
        
        //Set value of numRacers
        numRacers = Integer.parseInt((String)
            numRacersComboBox.getSelectedItem());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numRacersLabel = new javax.swing.JLabel();
        numRacersComboBox = new javax.swing.JComboBox<>();
        startRaceButton = new javax.swing.JButton();
        editRacersButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        raceTrackLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultsTextArea = new javax.swing.JTextArea();
        racersLabel = new javax.swing.JLabel();
        restTimeComboBoxLabel = new javax.swing.JLabel();
        restTimeComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        raceTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Thread Race");

        numRacersLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        numRacersLabel.setText("Number of Racers:");
        numRacersLabel.setName(""); // NOI18N

        numRacersComboBox.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        numRacersComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4", "5", "6", "7", "8", "9" }));
        numRacersComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numRacersCBActionPerformed(evt);
            }
        });

        startRaceButton.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        startRaceButton.setText("Start Race");
        startRaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startRaceButtonActionPerformed(evt);
            }
        });

        editRacersButton.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        editRacersButton.setText("Edit Racers");
        editRacersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRacersButtonActionPerformed(evt);
            }
        });

        exitButton.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        raceTrackLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        raceTrackLabel1.setText("Results:");

        resultsTextArea.setEditable(false);
        resultsTextArea.setColumns(20);
        resultsTextArea.setRows(5);
        jScrollPane2.setViewportView(resultsTextArea);

        racersLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        racersLabel.setText("Race Track:");

        restTimeComboBoxLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        restTimeComboBoxLabel.setText("Rest Time (ms):");
        restTimeComboBoxLabel.setName(""); // NOI18N

        restTimeComboBox.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        raceTextArea.setEditable(false);
        raceTextArea.setColumns(20);
        raceTextArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        raceTextArea.setRows(5);
        jScrollPane1.setViewportView(raceTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(raceTrackLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(racersLabel)
                .addGap(394, 394, 394))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(restTimeComboBoxLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(restTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numRacersLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numRacersComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(33, 33, 33)
                .addComponent(editRacersButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startRaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitButton)
                .addContainerGap(258, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(numRacersLabel)
                    .addComponent(numRacersComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editRacersButton)
                    .addComponent(startRaceButton)
                    .addComponent(exitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restTimeComboBoxLabel)
                    .addComponent(restTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(racersLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(raceTrackLabel1)
                        .addGap(27, 27, 27)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* Event handlers */
    
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitButtonActionPerformed
    {//GEN-HEADEREND:event_exitButtonActionPerformed
        //Open output file, write data to file, close file and exit program
        try(FileWriter fw = new FileWriter("race_data.txt", true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter out = new PrintWriter(bw))
        {
            out.write(resultsTextArea.getText());
            
            javax.swing.JOptionPane.showMessageDialog(this, 
                    "Date successfuly written to log file.");

            out.close();
        }       
        
        catch (IOException e) 
        {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error writting data to log file, "
                + "please check that file exists and is accessable", 
                "Data Write Error", 
                javax.swing.JOptionPane.WARNING_MESSAGE);
        }
        
        finally
        {
            System.exit(0);
        }
    }//GEN-LAST:event_exitButtonActionPerformed

    private void numRacersCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_numRacersCBActionPerformed
    {//GEN-HEADEREND:event_numRacersCBActionPerformed
        //Change number of racers
        int newVal = Integer.parseInt((String)
            numRacersComboBox.getSelectedItem());
        
        numRacers = newVal;
    }//GEN-LAST:event_numRacersCBActionPerformed

    private void editRacersButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_editRacersButtonActionPerformed
    {//GEN-HEADEREND:event_editRacersButtonActionPerformed
        //Create EditRacersDialog object
        EditRacersDialog erd = new EditRacersDialog(this, true, 
            racers, numRacers);
        
        //Set JDialog options
        erd.pack();
        
        erd.setLocationRelativeTo(null);
        
        erd.setVisible(true);
        
        //Replace racers with new ArrayList with updated attributes
        racers = null;
        
        racers = new ArrayList<>(erd.getModifiedList());        
    }//GEN-LAST:event_editRacersButtonActionPerformed

    private void startRaceButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_startRaceButtonActionPerformed
    {//GEN-HEADEREND:event_startRaceButtonActionPerformed
        //Set restTime attribute for ThreadRunner instances
        for (int i = 0; i < numRacers; i++)
        {
            racers.get(i).setRestTime(Long.parseLong((String) 
                    restTimeComboBox.getSelectedItem()));
            
            racers.get(i).setParent(this);
        }
        
        //Clear raceTextArea if previous race has been run
        raceTextArea.setText(null);
        
        //Create new Race instance, and run race
        Race race = new Race(racers, numRacers, this);
        race.runRace();
        
        //Call resetRacers() to clear racers so new Threads can be used
        racers = resetRacers();
    }//GEN-LAST:event_startRaceButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ThreadRaceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            new ThreadRaceFrame().setVisible(true);
            
        });
    }
    
    //Method for ThreadRunner objects to write to raceTextArea
    public synchronized void racerOutput(String move)
    {
        raceTextArea.append(move);
    }
    
    //Method that allows first thread to complete race to end the race
    public synchronized void finished(String name, Race race)
    {
        //Write winner name to raceTextArea
        raceTextArea.append(name + " has won the race!\n");
        
        //Call Race.endRace() to stop competitors
        race.endRace();
        
        //Output results of race to resultsTextArea
        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern(
                "yyyy/MM/dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        resultsTextArea.append("Winner of race concluded: " + 
            dateFormat.format(now) + " is: " + name + "\n");
    }
    
    //Private method that centers ThreadRaceFrame window on screen
    private void centerFrame()
    {
        setLocationRelativeTo(null);
    }
    
    //Method that resets racers between races
    private ArrayList<ThreadRunner> resetRacers()
    {
        ArrayList<ThreadRunner> temp = new ArrayList<>();
        
        for (int i = 0; i < 9; i++)
        {
            ThreadRunner newThreadRunner = new ThreadRunner(
                racers.get(i).getName(), racers.get(i).getRestPercentage(), 
                racers.get(i).getSpeed());
            
            temp.add(newThreadRunner);           
        }
        
        return temp;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editRacersButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> numRacersComboBox;
    private javax.swing.JLabel numRacersLabel;
    private javax.swing.JTextArea raceTextArea;
    private javax.swing.JLabel raceTrackLabel1;
    private javax.swing.JLabel racersLabel;
    private javax.swing.JComboBox<String> restTimeComboBox;
    private javax.swing.JLabel restTimeComboBoxLabel;
    private javax.swing.JTextArea resultsTextArea;
    private javax.swing.JButton startRaceButton;
    // End of variables declaration//GEN-END:variables
}